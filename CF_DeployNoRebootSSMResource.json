{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates SSM Stack with all services in Place",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "SSM Configurations"
                    },
                    "Parameters": [
                        "SchedExpWin",
                        "SchedExpLinux",
                        "SchedExpAMZLinux",
                        "ScanPatchSchedule",
                        "Duration",
                        "Cutoff",
                        "AllowUnregisteredTargets",
                        "LogsBucket"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "SchedExpWin": {
            "Description": "schedule to run the maintenance window",
            "Default": "cron(0 0 4 ? * SAT *)",
            "Type": "String",
            "ConstraintDescription": "How frequently you want to execute the lambda function, Refer here for help https://docs.aws.amazon.com/eventbridge/latest/userguide/scheduled-events.html"
        },
        "SchedExpLinux": {
            "Description": "schedule to run the maintenance window",
            "Default": "cron(0 0 4 ? * SAT *)",
            "Type": "String",
            "ConstraintDescription": "How frequently you want to execute the lambda function, Refer here for help https://docs.aws.amazon.com/eventbridge/latest/userguide/scheduled-events.html"
        },
        "SchedExpAMZLinux": {
            "Description": "schedule to run the maintenance window",
            "Default": "cron(0 0 4 ? * SAT *)",
            "Type": "String",
            "ConstraintDescription": "How frequently you want to execute the lambda function, Refer here for help https://docs.aws.amazon.com/eventbridge/latest/userguide/scheduled-events.html"
        },
        "ScanPatchSchedule": {
            "Description": "schedule to run the maintenance window",
            "Default": "rate(1 day)",
            "Type": "String",
            "ConstraintDescription": "How frequently you want to execute the lambda function, Refer here for help https://docs.aws.amazon.com/eventbridge/latest/userguide/scheduled-events.html"
        },
        "Duration": {
            "Description": "max duration of the maintenance window in hours",
            "Default": 2,
            "Type": "Number"
        },
        "Cutoff": {
            "Description": "hours before window closure to cut off new activity",
            "Default": 0,
            "Type": "Number",
            "ConstraintDescription": "must be < (Duration - 1)"
        },
        "AllowUnregisteredTargets": {
            "Description": "allow or disallow any individual managed instance",
            "Default": false,
            "Type": "String",
            "AllowedValues": [
                true,
                false
            ]
        },
        "LogsBucket": {
            "Description": "Provide the bucket name to store the logs",
            "Default": "resource-data-ssm",
            "Type": "String"
        }
    },
    "Resources": {
        "ScanMaintenanceWindow": {
            "Type": "AWS::SSM::MaintenanceWindow",
            "Properties": {
                "Description": "Maintenance window for ScanPatchInfoNoRebootSystems",
                "AllowUnassociatedTargets": {
                    "Ref": "AllowUnregisteredTargets"
                },
                "Cutoff": {
                    "Ref": "Cutoff"
                },
                "Schedule": {
                    "Ref": "ScanPatchSchedule"
                },
                "Duration": {
                    "Ref": "Duration"
                },
                "Name": "ScanPatchInfoNoRebootSystems"
            }
        },
        "ScanTargets": {
            "Type": "AWS::SSM::MaintenanceWindowTarget",
            "Properties": {
                "Description": "Scan for Patches in ScanPatchInfoNoRebootSystems",
                "WindowId": {
                    "Ref": "ScanMaintenanceWindow"
                },
                "ResourceType": "INSTANCE",
                "Targets": [
                    {
                        "Key": "tag:Patch Group",
                        "Values": [
                            "AMZ_NO_REBOOT",
                            "LNX_NO_REBOOT",
                            "SRV_NO_REBOOT"

                        ]
                    }
                ],
                "Name": "ScanPatchesNoRebootSystems"
            }
        },
        "ScanTask": {
            "Type": "AWS::SSM::MaintenanceWindowTask",
            "Properties": {
                "MaxErrors": 50,
                "Description": "Scans for patches in all instances",
                "Priority": 1,
                "MaxConcurrency": 100,
                "Targets": [
                    {
                        "Key": "WindowTargetIds",
                        "Values": [
                            {
                                "Ref": "ScanTargets"
                            }
                        ]
                    }
                ],
                "Name": "RunOnlyScan",
                "TaskArn": "AWS-RunPatchBaseline",
                "TaskInvocationParameters": {
                    "MaintenanceWindowRunCommandParameters": {
                        "TimeoutSeconds": 600,
                        "Comment": "RunCommand task",
                        "OutputS3BucketName": {
                            "Ref": "LogsBucket"
                        },
                        "OutputS3KeyPrefix": "PatchLogs",
                        "Parameters": {
                            "Operation": [
                                "Scan"
                            ]
                        }
                    }
                },
                "WindowId": {
                    "Ref": "ScanMaintenanceWindow"
                },
                "TaskType": "RUN_COMMAND"
            }
        },
        "CreateMaintenanceWindowWIN": {
            "Type": "AWS::SSM::MaintenanceWindow",
            "Properties": {
                "Description": "Maintenance window for Windows Servers",
                "AllowUnassociatedTargets": {
                    "Ref": "AllowUnregisteredTargets"
                },
                "Cutoff": {
                    "Ref": "Cutoff"
                },
                "Schedule": {
                    "Ref": "SchedExpWin"
                },
                "Duration": {
                    "Ref": "Duration"
                },
                "Name": "SRV_NO_REBOOT_Maintenance_Window_Windows"
            }
        },
        "CreateTaskTargetsWin": {
            "Type": "AWS::SSM::MaintenanceWindowTarget",
            "Properties": {
                "Description": "Task Target for Windows",
                "WindowId": {
                    "Ref": "CreateMaintenanceWindowWIN"
                },
                "ResourceType": "INSTANCE",
                "Targets": [
                    {
                        "Key": "tag:Patch Group",
                        "Values": [
                            "SRV_NO_REBOOT"
                        ]
                    }
                ],
                "Name": "TaskTarget-NoRebootWin"
            }
        },
        "CreateTaskWin": {
            "Type": "AWS::SSM::MaintenanceWindowTask",
            "Properties": {
                "MaxErrors": 50,
                "Description": "Run AWS-RunPatchBaseline command for all Patch Group values",
                "Priority": 1,
                "MaxConcurrency": 50,
                "Targets": [
                    {
                        "Key": "WindowTargetIds",
                        "Values": [
                            {
                                "Ref": "CreateTaskTargetsWin"
                            }
                        ]
                    }
                ],
                "Name": "RunWindowsPatchBaseLine",
                "TaskArn": "AWS-RunPatchBaseline",
                "TaskInvocationParameters": {
                    "MaintenanceWindowRunCommandParameters": {
                        "TimeoutSeconds": 600,
                        "Comment": "RunCommand task registered to RunWindowsPatchBaseLine",
                        "OutputS3BucketName": {
                            "Ref": "LogsBucket"
                        },
                        "OutputS3KeyPrefix": "PatchLogs",
                        "Parameters": {
                            "Operation": [
                                "Scan",
                                "Install"
                            ],
                            "RebootOption": ["NoReboot"]
                        }
                    }
                },
                "WindowId": {
                    "Ref": "CreateMaintenanceWindowWIN"
                },
                "TaskType": "RUN_COMMAND"
            }
        },
        "CreateMaintenanceWindowLinux": {
            "Type": "AWS::SSM::MaintenanceWindow",
            "Properties": {
                "Description": "Maintenance window for Linux Servers",
                "AllowUnassociatedTargets": {
                    "Ref": "AllowUnregisteredTargets"
                },
                "Cutoff": {
                    "Ref": "Cutoff"
                },
                "Schedule": {
                    "Ref": "SchedExpLinux"
                },
                "Duration": {
                    "Ref": "Duration"
                },
                "Name": "LNX_NO_REBOOT_Maintenance_Window_Linux"
            }
        },
        "CreateTaskTargetsLinux": {
            "Type": "AWS::SSM::MaintenanceWindowTarget",
            "Properties": {
                "Description": "Task Target for Linux",
                "WindowId": {
                    "Ref": "CreateMaintenanceWindowLinux"
                },
                "ResourceType": "INSTANCE",
                "Targets": [
                    {
                        "Key": "tag:Patch Group",
                        "Values": [
                            "LNX_NO_REBOOT"
                        ]
                    }
                ],
                "Name": "TaskTarget-Linux"
            }
        },
        "CreateTaskLinux": {
            "Type": "AWS::SSM::MaintenanceWindowTask",
            "Properties": {
                "MaxErrors": 50,
                "Description": "Run AWS-RunPatchBaseline command for all Patch Group values",
                "Priority": 1,
                "MaxConcurrency": 50,
                "Targets": [
                    {
                        "Key": "WindowTargetIds",
                        "Values": [
                            {
                                "Ref": "CreateTaskTargetsLinux"
                            }
                        ]
                    }
                ],
                "Name": "RunLinuxPatchBaseLine",
                "TaskArn": "AWS-RunPatchBaseline",
                "TaskInvocationParameters": {
                    "MaintenanceWindowRunCommandParameters": {
                        "TimeoutSeconds": 600,
                        "Comment": "RunCommand task registered to RunLinuxPatchBaseLine",
                        "OutputS3BucketName": {
                            "Ref": "LogsBucket"
                        },
                        "OutputS3KeyPrefix": "PatchLogs",
                        "Parameters": {
                            "Operation": [
                                "Scan",
                                "Install"
                            ]
                        }
                    }
                },
                "WindowId": {
                    "Ref": "CreateMaintenanceWindowLinux"
                },
                "TaskType": "RUN_COMMAND"
            }
        },
        "CreateMaintenanceWindowAMZNLNX": {
            "Type": "AWS::SSM::MaintenanceWindow",
            "Properties": {
                "Description": "Maintenance window for AMZNLNX Servers",
                "AllowUnassociatedTargets": {
                    "Ref": "AllowUnregisteredTargets"
                },
                "Cutoff": {
                    "Ref": "Cutoff"
                },
                "Schedule": {
                    "Ref": "SchedExpAMZLinux"
                },
                "Duration": {
                    "Ref": "Duration"
                },
                "Name": "AMZ_NO_REBOOT_Maintenance_Window"
            }
        },
        "CreateTaskTargetsAMZNLNX": {
            "Type": "AWS::SSM::MaintenanceWindowTarget",
            "Properties": {
                "Description": "Task Target for AMZNLNX",
                "WindowId": {
                    "Ref": "CreateMaintenanceWindowAMZNLNX"
                },
                "ResourceType": "INSTANCE",
                "Targets": [
                    {
                        "Key": "tag:Patch Group",
                        "Values": [
                            "AMZ_NO_REBOOT"
                        ]
                    }
                ],
                "Name": "TaskTarget-AMZNLNX"
            }
        },
        "CreateTaskAmazonLinux": {
            "Type": "AWS::SSM::MaintenanceWindowTask",
            "Properties": {
                "MaxErrors": 50,
                "Description": "Run AWS-RunPatchBaseline command for all Patch Group values",
                "Priority": 1,
                "MaxConcurrency": 50,
                "Targets": [
                    {
                        "Key": "WindowTargetIds",
                        "Values": [
                            {
                                "Ref": "CreateTaskTargetsAMZNLNX"
                            }
                        ]
                    }
                ],
                "Name": "RunAMZLinuxPatchBaseLine",
                "TaskArn": "AWS-RunPatchBaseline",
                "TaskInvocationParameters": {
                    "MaintenanceWindowRunCommandParameters": {
                        "TimeoutSeconds": 600,
                        "Comment": "RunCommand task registered to RunAMZLinuxPatchBaseLine",
                        "OutputS3BucketName": {
                            "Ref": "LogsBucket"
                        },
                        "OutputS3KeyPrefix": "PatchLogs",
                        "Parameters": {
                            "Operation": [
                                "Scan",
                                "Install"
                            ]
                        }
                    }
                },
                "WindowId": {
                    "Ref": "CreateMaintenanceWindowAMZNLNX"
                },
                "TaskType": "RUN_COMMAND"
            }
        }
    }
}